//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Assignment8.EncryptionDecryptService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="EncryptionDecryptService.IService1")]
    public interface IService1 {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encryption", ReplyAction="http://tempuri.org/IService1/encryptionResponse")]
        string encryption(string String_to_encrypt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/encryption", ReplyAction="http://tempuri.org/IService1/encryptionResponse")]
        System.Threading.Tasks.Task<string> encryptionAsync(string String_to_encrypt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decryption", ReplyAction="http://tempuri.org/IService1/decryptionResponse")]
        string decryption(string String_to_decrypt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/decryption", ReplyAction="http://tempuri.org/IService1/decryptionResponse")]
        System.Threading.Tasks.Task<string> decryptionAsync(string String_to_decrypt);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewUser", ReplyAction="http://tempuri.org/IService1/CreateNewUserResponse")]
        string CreateNewUser(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/CreateNewUser", ReplyAction="http://tempuri.org/IService1/CreateNewUserResponse")]
        System.Threading.Tasks.Task<string> CreateNewUserAsync(string username, string password, string email);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        string LoginUser(string user_name, string pass_word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/LoginUser", ReplyAction="http://tempuri.org/IService1/LoginUserResponse")]
        System.Threading.Tasks.Task<string> LoginUserAsync(string user_name, string pass_word);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        string[] Top10Words(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/Top10Words", ReplyAction="http://tempuri.org/IService1/Top10WordsResponse")]
        System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        string WordFilter(string str);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService1/WordFilter", ReplyAction="http://tempuri.org/IService1/WordFilterResponse")]
        System.Threading.Tasks.Task<string> WordFilterAsync(string str);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IService1Channel : Assignment8.EncryptionDecryptService.IService1, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class Service1Client : System.ServiceModel.ClientBase<Assignment8.EncryptionDecryptService.IService1>, Assignment8.EncryptionDecryptService.IService1 {
        
        public Service1Client() {
        }
        
        public Service1Client(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public Service1Client(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public Service1Client(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string encryption(string String_to_encrypt) {
            return base.Channel.encryption(String_to_encrypt);
        }
        
        public System.Threading.Tasks.Task<string> encryptionAsync(string String_to_encrypt) {
            return base.Channel.encryptionAsync(String_to_encrypt);
        }
        
        public string decryption(string String_to_decrypt) {
            return base.Channel.decryption(String_to_decrypt);
        }
        
        public System.Threading.Tasks.Task<string> decryptionAsync(string String_to_decrypt) {
            return base.Channel.decryptionAsync(String_to_decrypt);
        }
        
        public string CreateNewUser(string username, string password, string email) {
            return base.Channel.CreateNewUser(username, password, email);
        }
        
        public System.Threading.Tasks.Task<string> CreateNewUserAsync(string username, string password, string email) {
            return base.Channel.CreateNewUserAsync(username, password, email);
        }
        
        public string LoginUser(string user_name, string pass_word) {
            return base.Channel.LoginUser(user_name, pass_word);
        }
        
        public System.Threading.Tasks.Task<string> LoginUserAsync(string user_name, string pass_word) {
            return base.Channel.LoginUserAsync(user_name, pass_word);
        }
        
        public string[] Top10Words(string url) {
            return base.Channel.Top10Words(url);
        }
        
        public System.Threading.Tasks.Task<string[]> Top10WordsAsync(string url) {
            return base.Channel.Top10WordsAsync(url);
        }
        
        public string WordFilter(string str) {
            return base.Channel.WordFilter(str);
        }
        
        public System.Threading.Tasks.Task<string> WordFilterAsync(string str) {
            return base.Channel.WordFilterAsync(str);
        }
    }
}
